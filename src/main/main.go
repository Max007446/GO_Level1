package main

import (
	"log"
	"os"
)

func main() {
	// Создание файла: если файл не существует, он будет создан;
	// если файл уже существует, он будет очищен
	file, err := os.Create("G:/Geekbrains/GO/GO_Level1/src/main/myfile.txt")

	// Если по какой-либо причине создание файла невозможно, вернется ошибка.
	// Например, ошибка вернется, если у пользователя, запустившего приложение,
	// нет прав на создание файла в заданном месте
	if err != nil {
		log.Fatal(err)
	}

	// Если мы не хотим создавать или перезаписывать файл, а хотим работать с уже
	// существующим, для открытия файла понадобится функция Open:
	file, err = os.Open("G:/Geekbrains/GO/GO_Level1/src/main/myfile.txt")

	// При этом так же, как и в случае с созданием файла, возможны ошибки
	if err != nil {
		log.Fatal(err)
	}

	// После того, как работа с файлом закончена, его необходимо закрыть.
	// Только в таком случае мы гарантируем, что вся память, выделенная под
	// работу с файлом очищена, а сам файл не будет поврежден.
	// Хорошая практика - "деферить" закрытие файла, сразу же, как только
	// открытие или создание успешно прошло.
	defer func() {
		err = file.Close()

		// Обратите внимание: при закрытии файла также возможна ошибка
		if err != nil {
			log.Fatal(err)
		}
	}()
}
